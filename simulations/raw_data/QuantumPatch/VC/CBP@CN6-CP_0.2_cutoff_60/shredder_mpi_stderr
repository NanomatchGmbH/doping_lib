/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:552: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairsOptimized.py:565: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairs.py:488: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairs.py:488: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Distance in $\AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairs.py:500: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/MolecularTools/GetCrosspairs.py:500: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("Inverse distance in $10/ \AA$")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:239: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma_{local}$ = %g"%displaysigma
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:240: SyntaxWarning: invalid escape sequence '\D'
  delta_or_abs_x_label = "$\Delta$ E [eV]"
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:242: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma$ = %g" % sigma
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:302: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma_{local}$ ="
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:303: SyntaxWarning: invalid escape sequence '\D'
  delta_or_abs_x_label = "$\Delta$ E [eV]"
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:307: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma$ ="
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:377: SyntaxWarning: invalid escape sequence '\A'
  ax.set_xlabel("Distance [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:1728: SyntaxWarning: invalid escape sequence '\A'
  ax.set_xlabel("z [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:1890: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("z [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:2629: SyntaxWarning: invalid escape sequence '\A'
  ax.set_xlabel("z [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:2698: SyntaxWarning: invalid escape sequence '\s'
  self.accuracy_plot(sigma_by_z_real, sigma_by_z_pred, bin_edges_real, "$\sigma$ [eV]", title, "sigma_%s_%s_deviation.png"%(moltype,field))
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:239: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma_{local}$ = %g"%displaysigma
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:240: SyntaxWarning: invalid escape sequence '\D'
  delta_or_abs_x_label = "$\Delta$ E [eV]"
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:242: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma$ = %g" % sigma
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:302: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma_{local}$ ="
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:303: SyntaxWarning: invalid escape sequence '\D'
  delta_or_abs_x_label = "$\Delta$ E [eV]"
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:307: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma$ ="
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:377: SyntaxWarning: invalid escape sequence '\A'
  ax.set_xlabel("Distance [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:1728: SyntaxWarning: invalid escape sequence '\A'
  ax.set_xlabel("z [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:1890: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("z [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:239: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma_{local}$ = %g"%displaysigma
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:240: SyntaxWarning: invalid escape sequence '\D'
  delta_or_abs_x_label = "$\Delta$ E [eV]"
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:242: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma$ = %g" % sigma
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:302: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma_{local}$ ="
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:303: SyntaxWarning: invalid escape sequence '\D'
  delta_or_abs_x_label = "$\Delta$ E [eV]"
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:307: SyntaxWarning: invalid escape sequence '\s'
  delta_or_abs_label = "$\sigma$ ="
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:377: SyntaxWarning: invalid escape sequence '\A'
  ax.set_xlabel("Distance [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:2629: SyntaxWarning: invalid escape sequence '\A'
  ax.set_xlabel("z [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:2698: SyntaxWarning: invalid escape sequence '\s'
  self.accuracy_plot(sigma_by_z_real, sigma_by_z_pred, bin_edges_real, "$\sigma$ [eV]", title, "sigma_%s_%s_deviation.png"%(moltype,field))
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:1728: SyntaxWarning: invalid escape sequence '\A'
  ax.set_xlabel("z [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:1890: SyntaxWarning: invalid escape sequence '\A'
  plt.xlabel("z [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:2629: SyntaxWarning: invalid escape sequence '\A'
  ax.set_xlabel("z [$\AA$]")
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPAnalysis/QPPostProcess.py:2698: SyntaxWarning: invalid escape sequence '\s'
  self.accuracy_plot(sigma_by_z_real, sigma_by_z_pred, bin_edges_real, "$\sigma$ [eV]", title, "sigma_%s_%s_deviation.png"%(moltype,field))
1 molecule converted
1 molecule converted
slurmstepd: error: slurm_get_node_energy: Socket timed out on send/recv operation
slurmstepd: error: _get_joules_task: can't get info from slurmd
slurmstepd: error: slurm_get_node_energy: Socket timed out on send/recv operation
slurmstepd: error: _get_joules_task: can't get info from slurmd
slurmstepd: error: slurm_get_node_energy: Socket timed out on send/recv operation
slurmstepd: error: _get_joules_task: can't get info from slurmd
slurmstepd: error: slurm_get_node_energy: Socket timed out on send/recv operation
slurmstepd: error: _get_joules_task: can't get info from slurmd
1 molecule converted
1 molecule converted
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
/hkfs/home/project/hk-project-zimnano/nz8308/micromamba/envs/vc_syncfix/lib/python3.12/site-packages/scipy/optimize/_differentiable_functions.py:504: UserWarning: delta_grad == 0.0. Check if the approximated function is linear. If the function is linear better results can be obtained by defining the Hessian as zero instead of using quasi-Newton approximations.
  self.H.update(delta_x, delta_g)
No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.
No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.
No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.
No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.
/hkfs/home/project/hk-project-zimnano/nz8308/nanomatch-control-repo/src/qp_dev/quantumpatch/QuantumPatch/QPExternal/EAIPCorrection/TwoShells.py:737: SyntaxWarning: invalid escape sequence '\i'
  """
2024-04-05 19:15:35,901 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Two shells model is used. No density is set, it is being computed. It takes some time ...
2024-04-05 19:17:12,010 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - ... Material density is computed. It is 1.6307408759794324e+21 cm-3
2024-04-05 19:17:12,011 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Can we compare CT and IP/EA at all?
2024-04-05 19:17:12,020 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - yes, Radii in CT and IP/EA settings are the same.
2024-04-05 19:17:12,022 - root - INFO - check if molstates of IP/EA/C% are same was requested. But this is not needed as auto-VC mode was set
2024-04-05 19:17:12,022 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - yes, Molstates in CT and IP/EA settings are the same.
2024-04-05 19:17:12,044 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Parsing energies.ene.yml.gz file begins. It takes time . . .
2024-04-05 19:17:12,044 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	sim_type: IP
2024-04-05 19:17:12,044 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1899, 1669)
2024-04-05 19:17:12,044 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:12,082 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:12,123 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1676, 1854)
2024-04-05 19:17:12,123 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:12,155 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:12,191 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1819, 1807)
2024-04-05 19:17:12,191 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,209 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,243 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7889, 7844)
2024-04-05 19:17:13,243 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,276 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,313 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7900, 8007)
2024-04-05 19:17:13,313 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,350 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,390 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11459, 11168)
2024-04-05 19:17:13,390 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,428 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,471 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8061, 7937)
2024-04-05 19:17:13,471 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,505 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,542 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11231, 11184)
2024-04-05 19:17:13,542 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,575 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,612 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8072, 8153)
2024-04-05 19:17:13,612 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,645 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,680 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1518, 1797)
2024-04-05 19:17:13,680 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,716 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,755 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1505, 1564)
2024-04-05 19:17:13,755 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,787 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,822 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (23880, 24124)
2024-04-05 19:17:13,822 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,856 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,893 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1821, 20973)
2024-04-05 19:17:13,893 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,926 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:13,962 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (17721, 17609)
2024-04-05 19:17:13,962 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:13,992 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:14,026 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8000, 8070)
2024-04-05 19:17:14,026 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,011 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,045 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (4715, 4731)
2024-04-05 19:17:15,045 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,076 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,111 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1678, 11358)
2024-04-05 19:17:15,111 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,143 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,178 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20676, 21115)
2024-04-05 19:17:15,178 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,213 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,252 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20667, 20744)
2024-04-05 19:17:15,252 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,286 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,324 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20747, 20651)
2024-04-05 19:17:15,324 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,355 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,389 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (14130, 4598)
2024-04-05 19:17:15,389 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,421 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,456 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (4960, 4679)
2024-04-05 19:17:15,456 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,488 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,522 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20899, 20748)
2024-04-05 19:17:15,523 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,557 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,598 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11341, 11334)
2024-04-05 19:17:15,598 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,628 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,662 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20597, 20608)
2024-04-05 19:17:15,662 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,692 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,726 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1493, 1464)
2024-04-05 19:17:15,726 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,759 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,795 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8067, 8080)
2024-04-05 19:17:15,795 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:15,824 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:15,857 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (5217, 5224)
2024-04-05 19:17:15,857 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:16,830 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:16,865 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8283, 8281)
2024-04-05 19:17:16,865 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:16,894 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:16,927 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20587, 20646)
2024-04-05 19:17:16,927 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:16,963 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,003 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1414, 1449)
2024-04-05 19:17:17,003 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:17,040 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,080 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (21148, 21195)
2024-04-05 19:17:17,080 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:17,112 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,147 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (21323, 24547)
2024-04-05 19:17:17,147 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:17,178 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,212 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11222, 1385)
2024-04-05 19:17:17,212 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:17,249 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,290 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7723, 7829)
2024-04-05 19:17:17,290 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:17,321 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,356 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8224, 8322)
2024-04-05 19:17:17,356 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:17,390 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,426 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7856, 7669)
2024-04-05 19:17:17,426 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:17,458 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,493 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11224, 11168)
2024-04-05 19:17:17,493 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:17,524 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,559 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (24497, 24124)
2024-04-05 19:17:17,559 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:17,589 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:17,622 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (4454, 4885)
2024-04-05 19:17:17,622 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:18,601 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:18,639 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1556, 1690)
2024-04-05 19:17:18,639 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:18,670 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:18,703 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8422, 8003)
2024-04-05 19:17:18,703 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:18,738 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:18,775 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20665, 21179)
2024-04-05 19:17:18,775 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:18,813 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:18,854 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (27194, 27289)
2024-04-05 19:17:18,855 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:18,886 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:18,922 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20543, 21080)
2024-04-05 19:17:18,922 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:18,958 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:19,002 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (26891, 8153)
2024-04-05 19:17:19,002 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:19,052 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:19,098 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11183, 11223)
2024-04-05 19:17:19,098 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:19,133 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:19,170 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11148, 11044)
2024-04-05 19:17:19,170 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:19,201 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:19,236 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1476, 4676)
2024-04-05 19:17:19,236 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:19,268 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:19,304 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (10988, 10942)
2024-04-05 19:17:19,304 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:19,338 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:19,375 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	sim_type: EA
2024-04-05 19:17:19,376 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1899, 1669)
2024-04-05 19:17:19,376 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:19,413 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:19,451 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1676, 1854)
2024-04-05 19:17:19,451 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:20,430 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:20,463 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1819, 1807)
2024-04-05 19:17:20,464 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:20,493 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:20,524 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7889, 7844)
2024-04-05 19:17:20,524 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:20,557 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:20,593 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7900, 8007)
2024-04-05 19:17:20,593 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:20,630 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:20,668 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11459, 11168)
2024-04-05 19:17:20,668 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:20,705 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:20,745 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8061, 7937)
2024-04-05 19:17:20,745 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:20,779 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:20,813 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11231, 11184)
2024-04-05 19:17:20,813 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:20,846 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:20,881 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8072, 8153)
2024-04-05 19:17:20,881 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:20,913 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:20,946 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1518, 1797)
2024-04-05 19:17:20,946 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:20,982 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:21,019 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1505, 1564)
2024-04-05 19:17:21,019 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:21,051 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:21,084 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (23880, 24124)
2024-04-05 19:17:21,084 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:21,117 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:21,152 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1821, 20973)
2024-04-05 19:17:21,152 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:21,186 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:21,220 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (17721, 17609)
2024-04-05 19:17:21,220 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,194 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,226 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8000, 8070)
2024-04-05 19:17:22,226 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,257 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,290 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (4715, 4731)
2024-04-05 19:17:22,290 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,320 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,353 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1678, 11358)
2024-04-05 19:17:22,353 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,385 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,418 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20676, 21115)
2024-04-05 19:17:22,418 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,454 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,491 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20667, 20744)
2024-04-05 19:17:22,491 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,525 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,561 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20747, 20651)
2024-04-05 19:17:22,561 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,592 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,623 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (14130, 4598)
2024-04-05 19:17:22,623 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,655 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,689 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (4960, 4679)
2024-04-05 19:17:22,689 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,720 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,752 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20899, 20748)
2024-04-05 19:17:22,752 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,787 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,823 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11341, 11334)
2024-04-05 19:17:22,823 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,854 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,886 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20597, 20608)
2024-04-05 19:17:22,886 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,917 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:22,948 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1493, 1464)
2024-04-05 19:17:22,948 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:22,981 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:23,015 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8067, 8080)
2024-04-05 19:17:23,015 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:23,989 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,021 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (5217, 5224)
2024-04-05 19:17:24,021 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,051 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,083 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8283, 8281)
2024-04-05 19:17:24,083 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,113 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,144 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20587, 20646)
2024-04-05 19:17:24,144 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,180 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,218 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1414, 1449)
2024-04-05 19:17:24,218 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,254 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,291 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (21148, 21195)
2024-04-05 19:17:24,291 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,323 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,356 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (21323, 24547)
2024-04-05 19:17:24,356 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,387 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,419 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11222, 1385)
2024-04-05 19:17:24,419 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,455 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,495 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7723, 7829)
2024-04-05 19:17:24,495 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,526 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,559 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8224, 8322)
2024-04-05 19:17:24,559 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,592 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,627 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7856, 7669)
2024-04-05 19:17:24,627 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,659 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,691 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11224, 11168)
2024-04-05 19:17:24,691 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,724 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:24,758 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (24497, 24124)
2024-04-05 19:17:24,758 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:24,788 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:25,764 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (4454, 4885)
2024-04-05 19:17:25,764 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:25,799 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:25,834 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1556, 1690)
2024-04-05 19:17:25,835 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:25,865 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:25,897 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8422, 8003)
2024-04-05 19:17:25,897 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:25,932 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:25,968 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20665, 21179)
2024-04-05 19:17:25,968 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:26,005 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:26,044 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (27194, 27289)
2024-04-05 19:17:26,044 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:26,075 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:26,108 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20543, 21080)
2024-04-05 19:17:26,108 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:26,144 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:26,181 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (26891, 8153)
2024-04-05 19:17:26,181 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:26,216 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:26,252 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11183, 11223)
2024-04-05 19:17:26,252 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:26,285 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:26,321 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11148, 11044)
2024-04-05 19:17:26,321 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:26,351 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:26,384 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1476, 4676)
2024-04-05 19:17:26,384 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:26,416 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:26,449 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (10988, 10942)
2024-04-05 19:17:26,449 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:26,483 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:26,519 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	sim_type: CT
2024-04-05 19:17:26,519 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1899, 1669)
2024-04-05 19:17:26,519 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:26,556 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:27,549 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1676, 1854)
2024-04-05 19:17:27,549 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:27,582 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:27,619 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1819, 1807)
2024-04-05 19:17:27,619 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:27,648 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:27,683 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7889, 7844)
2024-04-05 19:17:27,683 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:27,716 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:27,754 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7900, 8007)
2024-04-05 19:17:27,754 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:27,790 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:27,831 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11459, 11168)
2024-04-05 19:17:27,831 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:27,870 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:27,913 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8061, 7937)
2024-04-05 19:17:27,913 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:27,947 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:27,985 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11231, 11184)
2024-04-05 19:17:27,985 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:28,018 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:28,056 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8072, 8153)
2024-04-05 19:17:28,056 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:28,088 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:28,125 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1518, 1797)
2024-04-05 19:17:28,125 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:28,160 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:28,201 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1505, 1564)
2024-04-05 19:17:28,201 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:28,233 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:28,270 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (23880, 24124)
2024-04-05 19:17:28,270 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:28,311 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:28,369 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1821, 20973)
2024-04-05 19:17:28,369 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:28,411 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:29,410 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (17721, 17609)
2024-04-05 19:17:29,410 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:29,441 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:29,475 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8000, 8070)
2024-04-05 19:17:29,476 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:29,506 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:29,541 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (4715, 4731)
2024-04-05 19:17:29,541 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:29,571 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:29,607 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1678, 11358)
2024-04-05 19:17:29,607 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:29,638 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:29,675 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20676, 21115)
2024-04-05 19:17:29,675 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:29,710 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:29,751 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20667, 20744)
2024-04-05 19:17:29,751 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:29,785 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:29,824 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20747, 20651)
2024-04-05 19:17:29,824 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:29,854 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:29,889 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (14130, 4598)
2024-04-05 19:17:29,889 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:29,920 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:29,957 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (4960, 4679)
2024-04-05 19:17:29,957 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:29,988 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:30,024 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20899, 20748)
2024-04-05 19:17:30,024 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:30,059 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:30,099 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11341, 11334)
2024-04-05 19:17:30,099 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:30,129 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:30,165 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20597, 20608)
2024-04-05 19:17:30,165 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:30,194 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:30,230 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1493, 1464)
2024-04-05 19:17:30,230 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,191 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,229 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8067, 8080)
2024-04-05 19:17:31,229 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,258 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,292 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (5217, 5224)
2024-04-05 19:17:31,292 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,323 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,358 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8283, 8281)
2024-04-05 19:17:31,358 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,387 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,422 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20587, 20646)
2024-04-05 19:17:31,422 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,458 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,499 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1414, 1449)
2024-04-05 19:17:31,499 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,535 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,576 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (21148, 21195)
2024-04-05 19:17:31,576 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,608 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,645 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (21323, 24547)
2024-04-05 19:17:31,645 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,675 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,710 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11222, 1385)
2024-04-05 19:17:31,710 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,747 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,789 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7723, 7829)
2024-04-05 19:17:31,789 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,820 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,855 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8224, 8322)
2024-04-05 19:17:31,855 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,888 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,927 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (7856, 7669)
2024-04-05 19:17:31,927 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:31,958 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:31,994 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11224, 11168)
2024-04-05 19:17:31,994 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:32,959 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:32,996 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (24497, 24124)
2024-04-05 19:17:32,996 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,026 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,060 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (4454, 4885)
2024-04-05 19:17:33,061 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,094 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,133 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1556, 1690)
2024-04-05 19:17:33,133 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,163 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,198 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (8422, 8003)
2024-04-05 19:17:33,198 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,232 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,272 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20665, 21179)
2024-04-05 19:17:33,272 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,309 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,351 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (27194, 27289)
2024-04-05 19:17:33,351 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,382 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,418 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (20543, 21080)
2024-04-05 19:17:33,418 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,454 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,494 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (26891, 8153)
2024-04-05 19:17:33,494 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,528 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,568 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11183, 11223)
2024-04-05 19:17:33,568 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,601 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,640 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (11148, 11044)
2024-04-05 19:17:33,640 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,670 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,706 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (1476, 4676)
2024-04-05 19:17:33,706 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:33,738 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:33,776 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		mol_id: (10988, 10942)
2024-04-05 19:17:33,776 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: uncharged
2024-04-05 19:17:34,741 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 			charged_state: charged
2024-04-05 19:17:34,781 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - . . . Parsing energies.ene.yml.gz completed.


2024-04-05 19:17:34,785 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - info were added for the matrix_dict
2024-04-05 19:17:34,821 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 10.00. sim_type: IP
2024-04-05 19:17:34,852 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 15.00. sim_type: IP
2024-04-05 19:17:34,883 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 20.00. sim_type: IP
2024-04-05 19:17:34,913 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 25.00. sim_type: IP
2024-04-05 19:17:34,943 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 30.00. sim_type: IP
2024-04-05 19:17:34,972 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 35.00. sim_type: IP
2024-04-05 19:17:35,002 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 40.00. sim_type: IP
2024-04-05 19:17:35,032 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 10.00. sim_type: EA
2024-04-05 19:17:35,061 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 15.00. sim_type: EA
2024-04-05 19:17:35,091 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 20.00. sim_type: EA
2024-04-05 19:17:35,121 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 25.00. sim_type: EA
2024-04-05 19:17:35,151 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 30.00. sim_type: EA
2024-04-05 19:17:35,181 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 35.00. sim_type: EA
2024-04-05 19:17:35,210 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 40.00. sim_type: EA
2024-04-05 19:17:35,240 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 10.00. sim_type: CT
2024-04-05 19:17:35,270 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 15.00. sim_type: CT
2024-04-05 19:17:35,300 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 20.00. sim_type: CT
2024-04-05 19:17:35,329 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 25.00. sim_type: CT
2024-04-05 19:17:35,359 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 30.00. sim_type: CT
2024-04-05 19:17:35,389 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 35.00. sim_type: CT
2024-04-05 19:17:35,419 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Radius: 40.00. sim_type: CT
2024-04-05 19:17:35,975 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - Computing corrections for CT/EA/IP: 
2024-04-05 19:17:35,977 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	 radius = 10.0
2024-04-05 19:17:35,977 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 IP corrections
2024-04-05 19:17:52,404 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 EA corrections
2024-04-05 19:18:08,876 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 CT corrections
2024-04-05 19:18:21,305 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	 radius = 15.0
2024-04-05 19:18:21,305 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 IP corrections
2024-04-05 19:18:36,328 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 EA corrections
2024-04-05 19:18:51,358 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 CT corrections
2024-04-05 19:19:02,643 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	 radius = 20.0
2024-04-05 19:19:02,643 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 IP corrections
2024-04-05 19:19:16,204 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 EA corrections
2024-04-05 19:19:29,776 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 CT corrections
2024-04-05 19:19:39,337 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	 radius = 25.0
2024-04-05 19:19:39,338 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 IP corrections
2024-04-05 19:19:51,792 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 EA corrections
2024-04-05 19:20:04,288 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 CT corrections
2024-04-05 19:20:14,018 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	 radius = 30.0
2024-04-05 19:20:14,018 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 IP corrections
2024-04-05 19:20:25,837 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 EA corrections
2024-04-05 19:20:37,751 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 CT corrections
2024-04-05 19:20:43,437 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	 radius = 35.0
2024-04-05 19:20:43,437 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 IP corrections
2024-04-05 19:20:56,236 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 EA corrections
2024-04-05 19:21:09,030 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 CT corrections
2024-04-05 19:21:17,901 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 	 radius = 40.0
2024-04-05 19:21:17,901 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 IP corrections
2024-04-05 19:21:30,729 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 EA corrections
2024-04-05 19:21:43,504 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 		 CT corrections
2024-04-05 19:21:50,835 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - 

save VC data to file Analysis/VC_analysis/vc_new_after_dr_0.0.csv ...
2024-04-05 19:21:50,835 - QuantumPatch.Tools.GetVCfromEAIPCT - INFO - done
WARNING: Builtin communicator 44000000 has pending 756 references.
